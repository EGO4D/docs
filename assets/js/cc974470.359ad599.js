"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[484],{3905:function(e,t,n){n.d(t,{Zo:function(){return p},kt:function(){return m}});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var d=a.createContext({}),s=function(e){var t=a.useContext(d),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=s(e.components);return a.createElement(d.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},c=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,d=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),c=s(n),m=r,h=c["".concat(d,".").concat(m)]||c[m]||u[m]||o;return n?a.createElement(h,i(i({ref:t},p),{},{components:n})):a.createElement(h,i({ref:t},p))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,i=new Array(o);i[0]=c;var l={};for(var d in t)hasOwnProperty.call(t,d)&&(l[d]=t[d]);l.originalType=e,l.mdxType="string"==typeof e?e:r,i[1]=l;for(var s=2;s<o;s++)i[s]=n[s];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}c.displayName="MDXCreateElement"},2062:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return l},contentTitle:function(){return d},metadata:function(){return s},toc:function(){return p},default:function(){return c}});var a=n(7462),r=n(3366),o=(n(7294),n(3905)),i=["components"],l={sidebar_position:7},d="Features",s={unversionedId:"data/features",id:"data/features",isDocsHomePage:!1,title:"Features",description:"Pre-extracted feature vectors are available for every video in the",source:"@site/docs/data/features.md",sourceDirName:"data",slug:"/data/features",permalink:"/docs/data/features",tags:[],version:"current",sidebarPosition:7,frontMatter:{sidebar_position:7},sidebar:"tutorialSidebar",previous:{title:"IMU",permalink:"/docs/data/imu"},next:{title:"Annotation Schemas",permalink:"/docs/data/annotations-schemas"}},p=[{value:"Want to Add a Model?",id:"want-to-add-a-model",children:[],level:2},{value:"Description",id:"description",children:[],level:2},{value:"Example Window Stride",id:"example-window-stride",children:[],level:2},{value:"Implementation",id:"implementation",children:[],level:2}],u={toc:p};function c(e){var t=e.components,n=(0,r.Z)(e,i);return(0,o.kt)("wrapper",(0,a.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"features"},"Features"),(0,o.kt)("p",null,"Pre-extracted feature vectors are available for every video in the\ndataset. They can be accessed with the ",(0,o.kt)("strong",{parentName:"p"},(0,o.kt)("a",{parentName:"strong",href:"https://github.com/facebookresearch/Ego4d/blob/main/ego4d/cli/README.md"},"EGO4D\nCLI")),". Please consult the table below for the appropriate ",(0,o.kt)("inlineCode",{parentName:"p"},"--dataset")," option."),(0,o.kt)("h2",{id:"want-to-add-a-model"},"Want to Add a Model?"),(0,o.kt)("p",null,"Refer to the features ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/facebookresearch/Ego4d/tree/main/ego4d/features"},"README on the Ego4D\ngithub"),"."),(0,o.kt)("p",null,"If you need support in running the job to extract features, please open an issue\non the github repository."),(0,o.kt)("h2",{id:"description"},"Description"),(0,o.kt)("p",null,"Here is a table of the features pre-extracted from Ego4D. These\nfeatures are extracted from the canonical videos. Canonical videos are\nall 30FPS."),(0,o.kt)("p",null,"Window Size and Stride are in frames."),(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:null},"Feature Type"),(0,o.kt)("th",{parentName:"tr",align:null},"Dataset(s) Trained On"),(0,o.kt)("th",{parentName:"tr",align:null},"Model Arch"),(0,o.kt)("th",{parentName:"tr",align:null},"Window Size"),(0,o.kt)("th",{parentName:"tr",align:null},"Stride"),(0,o.kt)("th",{parentName:"tr",align:null},"Model Weights Location"))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"slowfast8x8_r101_k400")),(0,o.kt)("td",{parentName:"tr",align:null},"Kinetics 400"),(0,o.kt)("td",{parentName:"tr",align:null},"SlowFast 8x8 (R101 backbone)"),(0,o.kt)("td",{parentName:"tr",align:null},"32"),(0,o.kt)("td",{parentName:"tr",align:null},"16"),(0,o.kt)("td",{parentName:"tr",align:null},"torchub path: facebookresearch/pytorchvideo/slowfast_r101")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"omnivore_video_swinl")),(0,o.kt)("td",{parentName:"tr",align:null},"Kinetics 400 / ImageNet-1K"),(0,o.kt)("td",{parentName:"tr",align:null},"Omnivore (swin L); video head"),(0,o.kt)("td",{parentName:"tr",align:null},"32"),(0,o.kt)("td",{parentName:"tr",align:null},"16"),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("a",{parentName:"td",href:"https://github.com/facebookresearch/omnivore#model-zoo"},"https://github.com/facebookresearch/omnivore#model-zoo"))),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"omnivore_image_swinl")),(0,o.kt)("td",{parentName:"tr",align:null},"Kinetics 400 / ImageNet-1K"),(0,o.kt)("td",{parentName:"tr",align:null},"Omnivore (swin L); image head"),(0,o.kt)("td",{parentName:"tr",align:null},"1"),(0,o.kt)("td",{parentName:"tr",align:null},"5"),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("a",{parentName:"td",href:"https://github.com/facebookresearch/omnivore#model-zoo"},"https://github.com/facebookresearch/omnivore#model-zoo"))))),(0,o.kt)("p",null,"Features are extracted in a moving window fashion. At every extraction\npoint the model sees the next Window Size (",(0,o.kt)("inlineCode",{parentName:"p"},"W"),") frames (i.e. at frame\n",(0,o.kt)("inlineCode",{parentName:"p"},"i")," the model sees features ",(0,o.kt)("inlineCode",{parentName:"p"},"[i, i + W)")," frames). The window starts at\nframe 0, and then is offset by the stride until the end of the video\nis reached."),(0,o.kt)("p",null,"There is a boundary condition where the last window may extend past\nthe video. In this case, the extraction point is backed up such that a\nwindow with ",(0,o.kt)("inlineCode",{parentName:"p"},"W")," frames from the video is used. This occurs when the\nnumber of frames in the canonical video is not divisible by the stride."),(0,o.kt)("h2",{id:"example-window-stride"},"Example Window Stride"),(0,o.kt)("p",null,"Let's say a video has 39 frames. The frames for extraction will be (in frame numbers):"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"[0, 31]"),(0,o.kt)("li",{parentName:"ul"},"[7, 38]"," which is \u201cback-padded\u201d from ","[16, 47]"," to fit the last window")),(0,o.kt)("h2",{id:"implementation"},"Implementation"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Read the ",(0,o.kt)("a",{parentName:"li",href:"https://github.com/facebookresearch/Ego4d/tree/main/ego4d/features"},"README on the Ego4D github")," to run or use the code yourself"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://pytorchvideo.readthedocs.io/en/latest/api/data/data.html?highlight=ClipSampler#pytorchvideo.data.UniformClipSampler"},"UniformClipSampler")," from PytorchVideo is used")))}c.isMDXComponent=!0}}]);